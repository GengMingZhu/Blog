<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yrw.dao.BlogDao">

	<!-- 二级缓存 -->
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	
	<resultMap id="BlogDetail" type="Blog" autoMapping="true">
		<id property="id" column="id"/>
		<association property="author" javaType="User" autoMapping="true">
			<id property="id" column="user_id"/>
		</association>
		<collection property="tags" ofType="Tag">
			<id property="name" column="tags"/>
		</collection>
	</resultMap>
	
	<select id="getBlogById" resultMap="BlogDetail">
		select blog.id, blog.author, blog.title, blog.content, blog.createdTime, 
		blog_tag_relation.tag as tags, 
		user.id as user_id, user.username, user.email, user.description, user.avatar 
		from blog left join blog_tag_relation 
		on blog.id = blog_tag_relation.blogId 
		left join user on blog.author = user.id 
		where blog.id = #{id}
	</select>
	
	<select id="getAllBlogs" resultMap="BlogDetail">
		select blog.id, blog.author, blog.title, blog.content, blog.createdTime, 
		blog_tag_relation.tag as tags, 
		user.id as user_id, user.username  
		from blog left join blog_tag_relation 
		on blog.id = blog_tag_relation.blogId 
		left join user on blog.author = user.id  
		order by blog.createdTime desc
	</select>
	
	<select id="getBlogsByAuthor" resultMap="BlogDetail">
		select blog.id, blog.title, blog.content, blog.createdTime, 
		blog_tag_relation.tag as tags 
		from blog left join blog_tag_relation 
		on blog.id = blog_tag_relation.blogId 
		where blog.author = #{id} 
		order by blog.createdTime
	</select>
	
	  <select id="getBlogsByTag" resultMap="BlogDetail">
	  	select blog.id, blog.title, blog.createdTime, 
	  	blog_tag_relation.tag as tags 
	  	from blog left join blog_tag_relation 
		on blog.id = blog_tag_relation.blogId 
		where blog.id in 
		(select blogId from blog_tag_relation 
		where tag = #{tag})
  	</select>
	
	<insert id="createBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="blog.id">
		insert into blog 
		(author, title, content, createdTime) 
		values 
		(#{blog.author.id}, #{blog.title}, #{blog.content}, #{blog.createdTime, jdbcType=TIMESTAMP})
	</insert>
	
	<update id="updateBlog" parameterType="Blog">
		update blog set 
		title = #{title}, content = #{content} 
		where id = #{id}
	</update>
	
	<update id="updateBlogHits">
		update blog set 
		hits = hits+1  
		where id = #{id}
	</update>
	
	<delete id="deleteBlog">
		delete from blog where id = #{id}
	</delete>

</mapper>